// Generated by PeachPy 0.2.0 from sum.py


// func Sum32(seed uint64, data_base uintptr, data_len int64, data_cap int64) uint32
TEXT Â·Sum32(SB),4,$0-36
	MOVQ seed+0(FP), CX
	MOVL CX, AX
	SHRQ $32, CX
	MOVL CX, BX
	MOVQ data_base+8(FP), CX
	MOVQ data_len+16(FP), DX
	CMPQ DX, $4
	JLT loop_end
loop_begin:
		MOVL 0(CX), DI
		ADDL DI, AX
		XORL AX, BX
		ROLL $20, AX
		ADDL BX, AX
		ROLL $9, BX
		XORL AX, BX
		ROLL $27, AX
		ADDL BX, AX
		ROLL $19, BX
		ADDQ $4, CX
		SUBQ $4, DX
		CMPQ DX, $4
		JGE loop_begin
loop_end:
	MOVL $128, DI
	CMPQ DX, $0
	JEQ after
	CMPQ DX, $3
	JEQ sw3
	CMPQ DX, $2
	JEQ sw2
	CMPQ DX, $1
	JEQ sw1
sw3:
	SHLL $8, DI
	MOVBLZX 2(CX), DX
	ORL DX, DI
sw2:
	SHLL $8, DI
	MOVBLZX 1(CX), DX
	ORL DX, DI
sw1:
	SHLL $8, DI
	MOVBLZX 0(CX), DX
	ORL DX, DI
after:
	ADDL DI, AX
	XORL AX, BX
	ROLL $20, AX
	ADDL BX, AX
	ROLL $9, BX
	XORL AX, BX
	ROLL $27, AX
	ADDL BX, AX
	ROLL $19, BX
	ADDL $0, AX
	XORL AX, BX
	ROLL $20, AX
	ADDL BX, AX
	ROLL $9, BX
	XORL AX, BX
	ROLL $27, AX
	ADDL BX, AX
	ROLL $19, BX
	XORL BX, AX
	MOVL AX, ret+32(FP)
	RET
